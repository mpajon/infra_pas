version: '2.3'

services:

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "${DOCKER_PATH}/portainer/portainer-data:/data"
    ports:
      - ${PORTAINER_PORT}:9000

  jenkins:
    image: registry.asnw.inetum.com/jenkins-inetum:2.426.3
    container_name: jenkins
    restart: unless-stopped
    labels:
      - com.docker.stack.namespace=jenkins
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${DOCKER_PATH}/jenkins/jenkins_configuration:/var/jenkins_home"
      - "${DOCKER_PATH}/.keys:/root/.keys"
    ports:
      - ${JENKINS_PORT}:8080
      - ${JENKINS_SLAVES_PORT}:50000
    extra_hosts:
      - svn.asturias.es:10.10.2.82
      - git.princast.org:10.154.0.115
      - gitlab.princast.org:172.29.128.242
    environment:
      - JAVA_OPTS=-Xmx2048m -Xms2048m -XX:+AlwaysPreTouch -XX:+UseG1GC -XX:+UseStringDeduplication -XX:+ParallelRefProcEnabled -XX:+DisableExplicitGC -XX:+UnlockExperimentalVMOptions -Dorg.jenkinsci.plugins.durabletask.BourneShellScript.HEARTBEAT_CHECK_INTERVAL=86400 -Dhudson.security.HudsonPrivateSecurityRealm.ID_REGEX=[a-zA-Z0-9_.@-]+
      - TZ=Europe/Madrid

  nexus:
    image: sonatype/nexus3
    container_name: nexus
    restart: unless-stopped
    volumes:
      - "${DOCKER_PATH}/nexus/nexus-data:/nexus-data"
    environment:
    - TZ=Europe/Madrid
    - CONTEXT_PATH=/
    - INSTALL4J_ADD_VM_PARAMS=-Xms1200m -Xmx1200m -XX:MaxDirectMemorySize=2g -Djava.util.prefs.userRoot=/nexus-data/javapref
    ports:
      - ${NEXUS3_PORT}:8081
      - 18000:18000

  sonarqube-postgresql:
    image: postgres:12
    hostname: sonarqube-postgresql
    container_name: sonarqube-postgresql
    restart: always
    environment:
      POSTGRES_USER: ${DB_SONARQUBE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_SONARQUBE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${DB_SONARQUBE_POSTGRES_NAME}
    volumes:
      - ${DOCKER_PATH}/sonarqube/sonarqube-postgresql:/var/lib/postgresql
      - ${DOCKER_PATH}/sonarqube/sonarqube-postgresql-data:/var/lib/postgresql/data
    ports:
      - ${DB_SONARQUBE_POSTGRES_PORT}:5432

  sonarqube:
    image: sonarqube:8.9.2-community
    hostname: sonarqube
    container_name: sonarqube
    restart: unless-stopped
    depends_on:
      - sonarqube-postgresql
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonarqube-postgresql/${DB_SONARQUBE_POSTGRES_NAME}
      SONAR_JDBC_USERNAME: ${DB_SONARQUBE_POSTGRES_USER}
      SONAR_JDBC_PASSWORD: ${DB_SONARQUBE_POSTGRES_PASSWORD}
    volumes:
      - ${DOCKER_PATH}/sonarqube/sonarqube_data:/opt/sonarqube/data
      - ${DOCKER_PATH}/sonarqube/sonarqube_extensions:/opt/sonarqube/extensions
      - ${DOCKER_PATH}/sonarqube/sonarqube_logs:/opt/sonarqube/logs
    ports:
      - ${SONARQUBE_PORT}:9000

  gitlab-redis:
    image: redis:6.2.6
    container_name: gitlab-redis
    restart: always
    command:
    - --loglevel warning
    volumes:
    - "${DOCKER_PATH}/gitlab/redis-data:/data:Z"

  gitlab-postgresql:
    image: sameersbn/postgresql:14-20230628
    container_name: gitlab-postgresql
    restart: always
    volumes:
    - "${DOCKER_PATH}/gitlab/gitlab-postgresql:/var/lib/postgresql:Z"
    environment:
    - DB_USER=${DB_USER}
    - DB_PASS=${DB_PASS}
    - DB_NAME=${DB_NAME}
    - DB_EXTENSION=pg_trgm,btree_gist

  gitlab:
    image: sameersbn/gitlab:16.8.1
    container_name: gitlab
    restart: always
    depends_on:
    - gitlab-redis
    - gitlab-postgresql
    ports:
    - ${GITLAB_PORT}:80
    - ${GITLAB_SSH_PORT}:22
    volumes:
    - "${DOCKER_PATH}/gitlab/gitlab-data:/home/git/data:Z"
    healthcheck:
      test: ["CMD", "/usr/local/sbin/healthcheck"]
      interval: 5m
      timeout: 10s
      retries: 3
      start_period: 5m
    environment:
    - DEBUG=false

    - DB_ADAPTER=postgresql
    - DB_HOST=gitlab-postgresql
    - DB_PORT=${DB_PORT}
    - DB_USER=${DB_USER}
    - DB_PASS=${DB_PASS}
    - DB_NAME=${DB_NAME}

    - REDIS_HOST=gitlab-redis
    - REDIS_PORT=${REDIS_PORT}

    - TZ=Europe/Madrid
    - GITLAB_TIMEZONE=Madrid

    - GITLAB_HTTPS=true
    - SSL_SELF_SIGNED=true

    - GITLAB_HOST=${GITLAB_HOST}
    - GITLAB_PORT=${GITLAB_PORT}
    - GITLAB_SSH_PORT=${GITLAB_SSH_PORT}
    - GITLAB_RELATIVE_URL_ROOT=
    - GITLAB_SECRETS_DB_KEY_BASE=long-and-random-alphanumeric-string
    - GITLAB_SECRETS_SECRET_KEY_BASE=long-and-random-alphanumeric-string
    - GITLAB_SECRETS_OTP_KEY_BASE=long-and-random-alphanumeric-string

    - GITLAB_ROOT_PASSWORD=${GITLAB_ROOT_PASSWORD}
    - GITLAB_ROOT_EMAIL=

    - GITLAB_NOTIFY_ON_BROKEN_BUILDS=true
    - GITLAB_NOTIFY_PUSHER=false

    - GITLAB_EMAIL=notifications@example.com
    - GITLAB_EMAIL_REPLY_TO=noreply@example.com
    - GITLAB_INCOMING_EMAIL_ADDRESS=reply@example.com

    - GITLAB_BACKUP_SCHEDULE=daily
    - GITLAB_BACKUP_TIME=01:00

    - SMTP_ENABLED=false
    - SMTP_DOMAIN=www.example.com
    - SMTP_HOST=smtp.gmail.com
    - SMTP_PORT=587
    - SMTP_USER=mailer@example.com
    - SMTP_PASS=password
    - SMTP_STARTTLS=true
    - SMTP_AUTHENTICATION=login

    - IMAP_ENABLED=false
    - IMAP_HOST=imap.gmail.com
    - IMAP_PORT=993
    - IMAP_USER=mailer@example.com
    - IMAP_PASS=password
    - IMAP_SSL=true
    - IMAP_STARTTLS=false

  keycloak:
      image: registry.asnw.inetum.com/keycloak-clave:15.0.2.1
      container_name: keycloak
      environment:
        - KC_PROXY=edge
        - PROXY_ADDRESS_FORWARDING=true
        - KEYCLOAK_USER=${KEYCLOAK_USER}
        - KEYCLOAK_PASSWORD=${KEYCLOAK_PASS}
        - KC_HOSTNAME=${KEYCLOAK_HOSTNAME}
        - TZ=Europe/Madrid
      ports:
        - ${KEYCLOAK_PORT}:8080
      extra_hosts:
        - ldapeducainteg.princast.org:10.154.48.11        
        - ldapmetaint.princast.org:10.154.48.13
        - intgiddj.sespa.es:10.154.212.6
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - /etc/timezone:/etc/timezone:ro
        - ${DOCKER_PATH}/keycloak/data:/opt/jboss/keycloak/standalone/data/
        - ${DOCKER_PATH}/keycloak/standalone-ha.xml:/opt/jboss/keycloak/standalone/configuration/standalone-ha.xml
        - ${DOCKER_PATH}/keycloak/cacerts:/usr/lib/jvm/java-11-openjdk-11.0.13.0.8-3.el8_5.x86_64/lib/security/cacerts
        - ${DOCKER_PATH}/keycloak/config:/opt/jboss/config/

  onboarding-back:
      container_name: onboarding-back
      image: registry.asnw.inetum.com/onboarding-back:1.0.4
      volumes:
        - ${DOCKER_PATH}/onboarding/back/config:/onboarding-back/config
      environment:
        SPRING_CONFIG_LOCATION: classpath:/,file:/onboarding-back/config/
        SPRING_PROFILES_ACTIVE: prod
      ports:
        - ${ONBOARDING_BACK_PORT}:8080
  
  onboarding-front:
    container_name: onboarding-front
    image: registry.asnw.inetum.com/onboarding-front:1.0.2
    volumes:
      - ${DOCKER_PATH}/onboarding/front/config/onboarding-env.js:/usr/share/nginx/html/onboarding-env.js
    ports:
      - ${ONBOARDING_FRONT_PORT}:80